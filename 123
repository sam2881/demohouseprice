 # Pull start_date and end_date from XCom
    start_date = ti.xcom_pull(task_ids='extract_variable', key='start_date')
    end_date = ti.xcom_pull(task_ids='extract_variable', key='end_date')

    # Fallback to default date if not provided
    if not start_date:
        start_date = (datetime.now() - timedelta(1)).strftime("%Y-%m-%d")
    if not end_date:
        end_date = (datetime.now() - timedelta(1)).strftime("%Y-%m-%d")

    # Define Trino connection details
    trino_conn_id = 'trino_cornerstone'
    catalog = 'your_catalog'
    schema = 'your_schema'
    table = 'your_table'

    # Define the Trino query
    query = f"""
        SELECT DISTINCT run_id 
        FROM {catalog}.{schema}.{table}
        WHERE reportindate >= DATE '{start_date}' AND reportindate <= DATE '{end_date}'
    """

    # Execute the query using TrinoHook
    trino_hook = TrinoHook(trino_conn_id=trino_conn_id)
    df = trino_hook.get_pandas_df(sql=query)

    # Extract run_id list
    run_ids = df['run_id'].tolist()

    # Push the list of run_ids to XCom
    ti.xcom_push(key='run_ids', value=run_ids)

    return {
        "start_date": start_date,
        "end_date": end_date,
        "run_ids": run_ids
    }
